# This is a basic workflow to help you get started with Actions

name: Resource-Manager

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  my-instances:
    runs-on: ubuntu-latest
    name: Create a stack and apply it
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - name: Retrieve the OCID of a named compartment in tenancy
        uses: oracle-actions/run-oci-cli-command@v1.1.1
        id: find-compartment-id
        with:
          command: 'iam compartment list --compartment-id-in-subtree=true --all'
          query: "data[?name=='gferreyr'].id"
          silent: false

      - name: 'Create Provider'
        uses: oracle-actions/run-oci-cli-command@v1.1.1
        id: create-connection-git
        with:
          command: 'resource-manager configuration-source-provider create-github-access-token-provider --access-token ${{secrets.ACCESS_TOKEN_GITHUB}} --api-endpoint https://github.com/ --display-name workflow  --compartment-id ${{ steps.find-compartment-id.outputs.raw_output }}'
          query: 'data.id'
          silent: false
 
      - name: 'Extract OCID from create-connection-git output'
        id: extract-ocid
        run: echo "OCID=$(echo ${{ steps.create-connection-git.outputs.output }} | tr -d '"')" >> $GITHUB_ENV

      - name: 'Create Stack'
        uses: oracle-actions/run-oci-cli-command@v1.1.1
        id: create-stack
        with:
          command: 'resource-manager stack create-from-git-provider --compartment-id "${{ steps.find-compartment-id.outputs.raw_output }}"
          --config-source-configuration-source-provider-id ${{ env.OCID }}
          --config-source-branch-name main 
          --config-source-repository-url https://github.com/guidin360/rm-demo
          --display-name rmgit 
          --terraform-version "1.0.x" 
          --variables "{\"assign_public_ip\": \"true\", \"compartment_ocid\": \"${{ steps.find-compartment-id.outputs.raw_output }}\", \"image_ocid\": \"ocid1.image.oc1.iad.aaaaaaaavbafqm6xn5bkhrqtohcdphv5b7c7wzile7w33cv4drdiittiivpa\", \"instance_availability_domain\": \"GqIF:US-ASHBURN-AD-1\", \"instance_display_name\": \"github-demo\", \"instance_shape\": \"VM.Standard.E4.Flex\", \"instance_shape_config_memory_in_gbs\": \"8\", \"instance_shape_config_ocpus\": \"1\", \"public_key\": \"ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMPnQhx/Fy0Y5X66m8Q575f3ZKF+CedQ47FmWwRQZ9x6GqfSrNXy5MSuiVnoWz1gvnzNC+ysDj9JJ9kfmtlwFZI= noname\", \"subnet_id\": \"ocid1.subnet.oc1.iad.aaaaaaaaradq3yg4ye7ahu762smojhmjji7v7pogjao3rlsybw43yhuts4uq\", \"region\": \"us-ashburn-1\"}"'
          query: 'data.id'
          silent: false

      - name: 'Extract OCID from create stack output'
        id: stack-id
        run: echo "STACK_ID=$(echo ${{ steps.create-stack.outputs.output }} | tr -d '"')" >> $GITHUB_ENV

      - name: 'Terraform Apply'
        uses: oracle-actions/run-oci-cli-command@v1.1.1
        id: terraform-apply
        with:
          command: 'resource-manager job create-apply-job --stack-id ${{ env.STACK_ID }} --execution-plan-strategy AUTO_APPROVED'
          query: 'data.id'
          silent: false

      - name: Outputs
        run: |
          echo ${{ steps.create-connection-git.outputs.output }} | jq .
          echo ${{ steps.create-stack.outputs.output }} | jq .